{"version":3,"sources":["webpack://bloglist-frontend/./src/components/forms/SignupForm.js","webpack://bloglist-frontend/./src/components/container/SignupPage.js","webpack://bloglist-frontend/./src/hooks/index.js","webpack://bloglist-frontend/./src/lib/index.js"],"names":["SignupForm","props","handleSignup","username","name","password","useEffect","document","querySelector","focus","Form","onSubmit","className","required","label","id","type","value","onChange","propTypes","PropTypes","SignupPage","useField","setNotification","event","preventDefault","userService","getFieldsValues","newUser","message","error","mapDispatchToProps","connect","useState","setValue","target","filterBlogs","blogs","user","filter","blog","credentials","fields","forEach","f","checkUrl","url","substring","populateWithBlogs","users","map","u","uBlogs","b","emptyObj","obj","Object","keys","length"],"mappings":"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","file":"632.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport { PropTypes } from 'prop-types'\n\nimport { Form } from 'semantic-ui-react'\n\nconst SignupForm = (props) => {\n  const { handleSignup, username, name, password } = { ...props }\n\n\tuseEffect(() => {\n\t\tdocument.querySelector('input').focus()\n\t}, [])\n\n  return (\n    <>\n      <Form onSubmit={handleSignup} className='login-form'>\n        <Form.Group>\n          <Form.Input\n            required\n            label=\"Username\"\n            id='username'\n            name={username.name}\n            type={username.type}\n            value={username.value}\n            onChange={username.onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            required\n            label=\"Name\"\n            id='name'\n            name={name.name}\n            type={name.type}\n            value={name.value}\n            onChange={name.onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            required\n            label=\"Password\"\n            id='password'\n            name={password.name}\n            type={password.type}\n            value={password.value}\n            onChange={password.onChange}\n          />\n        </Form.Group>\n        <Form.Button type='submit'>Create</Form.Button>\n      </Form>\n    </>\n  )\n}\n\nSignupForm.propTypes = {\n  handleSignup: PropTypes.func.isRequired,\n  username: PropTypes.object.isRequired,\n  name: PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired\n}\n\nexport default SignupForm","import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\n\nimport { setNotification } from 'Reducers/notificationReducer'\n\nimport SignupForm from 'Forms/SignupForm'\n\nimport userService from 'Services/users'\nimport { useField } from 'Hooks'\nimport { getFieldsValues } from 'Lib'\n\nconst SignupPage = props => {\n  const username = useField('text', 'username')\n  const name = useField('name', 'name')\n  const password = useField('password', 'password')\n  const { setNotification } = props\n\n  const handleSignup = async (event) => {\n    event.preventDefault()\n    try {\n      const newUser = await userService.createUser(getFieldsValues(username, name, password))\n      setNotification({ message: `User with username ${newUser.username} created` })\n    } catch (exception) {\n      setNotification({ error: `Could not create user: ${exception.message}` })\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <h2>Sign up with a test user</h2>\n      <p>\n\t\t\t\t&#10071;<strong>The created user will be automatically removed within 24 hours</strong>\n      </p>\n      <SignupForm handleSignup={handleSignup} username={username} name={name} password={password}/>\n    </div>\n  )\n}\n\nconst mapDispatchToProps =   {\n  setNotification,\n}\n\nSignupPage.propTypes = {\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignupPage)\n","import { useState } from 'react'\n\nexport const useField = (type, name) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    name,\n    type,\n    value,\n    onChange,\n    setValue,\n  }\n}","export const filterBlogs = (blogs, user) => {\n  return blogs.filter(blog => {\n    return blog.user.username === user.username\n  }\n  )\n}\n\nexport const getFieldsValues = (...fields) => {\n  const credentials = {}\n  fields.forEach(f => {\n    credentials[f.name] = f.value\n  })\n  return credentials\n}\n\nexport const checkUrl = (url) => {\n  if(url.substring(0,7) === 'http://' | url.substring(0,8) === 'https://'){\n    return true\n  }\n  return false\n}\n\nexport const populateWithBlogs = (users, blogs) => {\n  return users.map( u => {\n    let uBlogs = blogs.filter( b => b.user.id === u.id )\n    return { ...u, blogs: uBlogs }\n  })\n}\n\nexport const emptyObj = (obj) => Object.keys(obj).length === 0\n"],"sourceRoot":""}