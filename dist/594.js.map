{"version":3,"sources":["webpack://bloglist-frontend/./src/components/container/LoggedInContent.js","webpack://bloglist-frontend/./src/components/presentational/Logout.js","webpack://bloglist-frontend/./src/components/presentational/Nav.js","webpack://bloglist-frontend/./src/components/presentational/Notification.js"],"names":["BlogsPage","default","Blog","User","UserList","LoggedInContent","props","useState","loading","setLoading","initializeBlogs","setNotification","getUsers","login","useEffect","fetchWithRetry","className","username","exact","path","render","match","to","timeout","error","message","setTimeout","mapDispatchToProps","propTypes","PropTypes","connect","state","handleLogout","window","localStorage","clear","location","href","origin","Button","onClick","Nav","pathname","substr","activeItem","setActiveItem","Menu","widths","active","Notification","notification","closeModal","open","onClose","role","setFocus","setText","id","color","retry","button","document","getElementById","modal","querySelector","focus","addEventListener","e","key","preventDefault"],"mappings":"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","file":"594.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\nimport { Redirect, BrowserRouter as Router, Route } from \"react-router-dom\"\n\nimport { setNotification } from 'Reducers/notificationReducer'\nimport { getUsers } from 'Reducers/usersReducer'\nimport { initializeBlogs } from 'Reducers/blogReducer'\n\nimport Notification from 'Presentationals/Notification'\nimport Nav from 'Presentationals/Nav'\nconst { default: BlogsPage } = await import(/* webpackPrefetch: true */'Containers/BlogsPage')\nconst { default: Blog } = await import(/* webpackPrefetch: true */'Containers/Blog')\nconst { default: User } = await import(/* webpackPrefetch: true */'Containers/User')\nconst { default: UserList } = await import(/* webpackPrefetch: true */'Presentationals/UserList')\n\nfunction LoggedInContent(props) {\n  const [loading, setLoading] = useState(true)\n  const {\n    initializeBlogs,\n    setNotification,\n    getUsers,\n    login,\n  } = props\n\n  useEffect( async () => {\n    fetchWithRetry(5)\n  },)\n\n  return (\n    <div className='loggedin-content'>\n      <Router>\n        <Nav username={login.username} />\n        <Notification />\n        { loading\n          ? <>\n            <div className=\"loader\"></div>\n            <p>Fetching data...</p>\n          </>\n          : null\n        }\n\t\t\t\t{/* <main aria-live=\"polite\"> */}\n\t\t\t\t\t<Route exact path='/' render={() => <BlogsPage /> }/>\n\t\t\t\t\t<Route path='/blogs/:id' render={({ match }) => <Blog match={match} />} />\n\t\t\t\t\t<Route exact path='(/blogs)' render={() => <Redirect to='/'/>} />\n\t\t\t\t\t<Route exact path='(/blogs/)' render={() => <Redirect to='/'/>} />\n\t\t\t\t\t<Route path='/users/:id' render={({ match }) => <User match={match} />} />\n\t\t\t\t\t<Route exact path='/users/)' render={() => <Redirect to='/users'/>} />\n\t\t\t\t\t<Route exact path='/users' render={() => <UserList /> } />\n\t\t\t\t{/* </main> */}\n      </Router>\n    </div>\n  )\n\n  async function fetchWithRetry(timeout) {\n    try {\n      await initializeBlogs()\n      await getUsers()\n      setLoading(false)\n    } catch (exception) {\n      setNotification({ error: `Could not fetch data: ${exception.message}. Retrying...` })\n      setTimeout( () => {\n        fetchWithRetry(timeout)\n      }, timeout*1000)\n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.login,\n  }\n}\n\nconst mapDispatchToProps = {\n  initializeBlogs,\n  setNotification,\n  getUsers,\n}\n\nLoggedInContent.propTypes = {\n  initializeBlogs: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  getUsers: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoggedInContent)\n\n","import React from 'react'\n\nimport { Button } from 'semantic-ui-react'\n\nconst Logout = () => {\n  return (\n    <>\n      <Button onClick={handleLogout} >Logout</Button>\n    </>\n  )\n}\n\nconst handleLogout = () => {\n  window.localStorage.clear()\n  window.location.href = window.location.origin\n}\n\nexport default Logout","import React, { useState } from \"react\"\n\nimport { PropTypes } from 'prop-types'\n\nimport { Link } from \"react-router-dom\"\n\nimport Logout from 'Presentationals/Logout'\nimport { Menu } from 'semantic-ui-react'\n\nconst Nav = (props) => {\n  const {\n    username\n  } = props\n  const [activeItem, setActiveItem] = useState(window.location.pathname.substr(1) || 'blogs')\n\n  return (\n    <nav>\n      <Menu widths='4'>\n        <Menu.Item active={activeItem === 'blogs'}>\n          <Link to={'/'} onClick={ () => setActiveItem('blogs')}>Blogs</Link>\n        </Menu.Item>\n        <Menu.Item active={activeItem === 'users'}>\n          <Link to={'/users'} onClick={ () => setActiveItem('users')}>Users</Link>\n        </Menu.Item>\n        <Menu.Item>{username} logged in</Menu.Item>\n        <Menu.Item><Logout /></Menu.Item>\n      </Menu>\n    </nav>\n\n  )\n}\n\nNav.propTypes = {\n  username: PropTypes.string.isRequired,\n}\n\nexport default Nav","import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\n\nimport { Modal, Button } from 'semantic-ui-react'\n\nimport { setNotification } from 'Reducers/notificationReducer'\n\nconst Notification = (props) => {\n  const { notification, setNotification } = props\n  const message = notification.message\n  const error = notification.error\n\n  const closeModal = () => {\n    setNotification('')\n  }\n\n  return (\n    <Modal\n      open={message || error ? true : false}\n      onClose={() => closeModal()}\n      className={`notification ${message ? 'message' : 'error'}`}\n      role=\"alert\"\n    >\n      <i>\n        {setText()}\n      </i>\n      <Modal.Actions>\n        <Button id=\"modal-close\" color='red' onClick={() => closeModal()}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n\n  function setText() {\n    if(message || error) {\n      setTimeout(() => setFocus(5), 200)\n      return message ? message : error\n    }\n  }\n\n  function setFocus(retry) {\n    const button = document.getElementById('modal-close')\n    const modal = document.querySelector('.modal')\n    if(button && modal) {\n      // modal.querySelector('i').setAttribute('aria-live', 'assertive')\n      button.focus()\n      modal.addEventListener('keydown', (e) => {\n        if(e.key === 'Tab'){\n          e.preventDefault()\n          button.focus()\n        }\n      })\n    }\n    else if(retry > 0) {\n      setFocus(retry --)\n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n}\n\nNotification.propTypes = {\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notification)"],"sourceRoot":""}