{"version":3,"sources":["webpack://bloglist-frontend/./src/components/forms/BlogForm.js","webpack://bloglist-frontend/./src/components/presentational/BlogList.js","webpack://bloglist-frontend/./src/components/container/BlogsPage.js","webpack://bloglist-frontend/./src/components/container/Togglable.js","webpack://bloglist-frontend/./src/hooks/index.js","webpack://bloglist-frontend/./src/lib/index.js"],"names":["BlogForm","props","handleSubmit","title","author","url","hide","Form","onSubmit","event","required","label","id","type","name","value","onChange","propTypes","PropTypes","BlogList","blogs","login","filterBlogs","length","Table","striped","celled","sort","a","b","likes","map","blog","i","key","to","connect","state","BlogsPage","useField","setNotification","createBlog","preventDefault","checkUrl","error","token","getFieldsValues","message","setValue","aria-live","Togglable","buttonLabel","mapDispatchToProps","children","useState","visible","setVisible","childrenWithProps","React","child","onClick","target","user","filter","username","credentials","fields","forEach","f","substring","populateWithBlogs","users","u","uBlogs","emptyObj","obj","Object","keys"],"mappings":"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","file":"352.js","sourcesContent":["import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\n\nimport { Form } from 'semantic-ui-react'\n\nfunction BlogForm(props) {\n  const { handleSubmit, title, author, url, hide } = props\n  const onSubmit = (event) => {\n    handleSubmit(event)\n    if (hide) hide()\n  }\n\n  return (\n    <div>\n      <h2>Add a new blog</h2>\n      <Form onSubmit={onSubmit}>\n        <Form.Input\n          required\n          label=\"Title\"\n          id='title'\n          type={title.type}\n          name={title.name}\n          value={title.value}\n          onChange={title.onChange}\n        />\n        <Form.Input\n          required\n          label=\"Author\"\n          id='author'\n          type={author.type}\n          name={author.name}\n          value={author.value}\n          onChange={author.onChange}\n        />\n        <Form.Input\n          required\n          label=\"URL\"\n          id='url'\n          type={url.type}\n          name={url.name}\n          value={url.value}\n          onChange={url.onChange}\n        />\n        <Form.Button type='submit'>Save</Form.Button>\n      </Form>\n    </div>\n  )\n}\n\nBlogForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  author: PropTypes.object.isRequired,\n  url: PropTypes.object.isRequired,\n  hide: PropTypes.func\n}\n\nexport default BlogForm","import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport { Table } from 'semantic-ui-react'\n\nimport { filterBlogs } from 'Lib'\n\nconst BlogList = (props) => {\n  const { blogs, login } = props\n\n  return (\n    <>\n      <h2>Your blogs</h2>\n\t\t\t<div>\n      { filterBlogs(blogs, login).length\n        ?\n        <Table striped celled >\n          <Table.Body>\n            {filterBlogs(blogs, login).sort((a, b) => a.likes - b.likes).map((blog, i) =>\n              <Table.Row key={i}>\n                <Table.Cell>\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                </Table.Cell>\n              </Table.Row>\n            )}\n          </Table.Body>\n        </Table>\n        :\n        <p>You don&apos;t have any blogs yet</p>\n      }\n\t\t\t</div>\n      <h2>All blogs</h2>\n      { blogs.length\n        ?\n        <Table striped celled >\n          <Table.Body>\n            {\n              blogs.sort((a, b) => a.likes - b.likes).map((blog, i) =>\n                <Table.Row key={i}>\n                  <Table.Cell>\n                    <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                  </Table.Cell>\n                </Table.Row>\n              )}\n          </Table.Body>\n        </Table>\n        :\n        <p>There are no blogs yet</p>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    login: state.login,\n  }\n}\n\nBlogList.propTypes = {\n  login: PropTypes.object.isRequired,\n  blogs: PropTypes.array.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(BlogList)","import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\n\nimport { setNotification } from 'Reducers/notificationReducer'\nimport { createBlog } from 'Reducers/blogReducer'\n\nimport Togglable from 'Containers/Togglable'\nimport BlogForm from 'Forms/BlogForm'\nimport BlogList from 'Presentationals/BlogList'\n\nimport { useField } from 'Hooks'\nimport { checkUrl, getFieldsValues } from 'Lib'\n\nfunction BlogsPage(props) {\n  const title = useField('text', 'title')\n  const author = useField('text', 'author')\n  const url = useField('text', 'url')\n  const { login, setNotification, createBlog } = props\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if(!checkUrl(url.value)){\n      setNotification({ error: 'Please use a valid URL as \"https://\" or \"http://\"' })\n      return null\n    }\n    try {\n      await createBlog(login.token, getFieldsValues(title, author, url))\n      setNotification({ message: `A new blog \"${title.value} by ${author.value}\" added` })\n      title.setValue('')\n      author.setValue('')\n      url.setValue('')\n    } catch (exception) {\n      setNotification({ error: `Could not add the blog: ${exception.message}` })\n    }\n  }\n\n  return (\n    <>\n      <h1 aria-live=\"polite\">Blogs</h1>\n      <main>\n        <BlogList />\n        <Togglable buttonLabel='New blog'>\n          <BlogForm\n            handleSubmit={handleSubmit}\n            title={title}\n            author={author}\n            url={url}\n          />\n        </Togglable>\n      </main>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  createBlog,\n  setNotification,\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.login\n  }\n}\n\nBlogsPage.propTypes = {\n  login: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  createBlog: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BlogsPage)\n\n","import React, { useState } from \"react\"\n\nimport { PropTypes } from 'prop-types'\n\nimport { Button } from 'semantic-ui-react'\n\nfunction Togglable(props) {\n  const { buttonLabel, children } = props\n  const [visible, setVisible] = useState(false)\n\n  const hide = () => setVisible(false)\n\n  const childrenWithProps = React.Children.map(children,\n    child => React.cloneElement(child, { hide }))\n\n  return (\n    <div>\n      { visible ?\n        <>\n          { childrenWithProps }\n          <Button onClick={() => setVisible(!visible)} >Cancel</Button>\n        </>\n        :\n        <Button onClick={() => setVisible(!visible)} >{buttonLabel}</Button>\n      }\n    </div>\n  )\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nexport default Togglable","import { useState } from 'react'\n\nexport const useField = (type, name) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    name,\n    type,\n    value,\n    onChange,\n    setValue,\n  }\n}","export const filterBlogs = (blogs, user) => {\n  return blogs.filter(blog => {\n    return blog.user.username === user.username\n  }\n  )\n}\n\nexport const getFieldsValues = (...fields) => {\n  const credentials = {}\n  fields.forEach(f => {\n    credentials[f.name] = f.value\n  })\n  return credentials\n}\n\nexport const checkUrl = (url) => {\n  if(url.substring(0,7) === 'http://' | url.substring(0,8) === 'https://'){\n    return true\n  }\n  return false\n}\n\nexport const populateWithBlogs = (users, blogs) => {\n  return users.map( u => {\n    let uBlogs = blogs.filter( b => b.user.id === u.id )\n    return { ...u, blogs: uBlogs }\n  })\n}\n\nexport const emptyObj = (obj) => Object.keys(obj).length === 0\n"],"sourceRoot":""}