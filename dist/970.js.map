{"version":3,"sources":["webpack://bloglist-frontend/./src/components/forms/LoginForm.js","webpack://bloglist-frontend/./src/services/login.js","webpack://bloglist-frontend/./src/components/container/LoginPage.js","webpack://bloglist-frontend/./src/hooks/index.js","webpack://bloglist-frontend/./src/lib/index.js"],"names":["LoginForm","props","handleLogin","username","password","useEffect","document","querySelector","focus","Form","onSubmit","className","required","label","id","name","type","value","onChange","propTypes","PropTypes","baseUrl","process","login","credentials","request","postReq","fetch","response","responseOrThrow","LoginPage","useField","setToken","setUser","setNotification","event","preventDefault","loginService","getFieldsValues","user","window","localStorage","setItem","JSON","stringify","token","location","href","origin","setValue","error","message","mapDispatchToProps","connect","useState","target","filterBlogs","blogs","filter","blog","fields","forEach","f","checkUrl","url","substring","populateWithBlogs","users","map","u","uBlogs","b","emptyObj","obj","Object","keys","length"],"mappings":"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","file":"970.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nimport { PropTypes } from 'prop-types'\n\nimport { Form } from 'semantic-ui-react'\n\nconst LoginForm = (props) => {\n  const { handleLogin, username, password } = { ...props }\n\n\tuseEffect(() => {\n\t\tdocument.querySelector('input').focus()\n\t}, [])\n\n  return (\n    <>\n      <h2>Login</h2>\n      <Form onSubmit={handleLogin} className='login-form'>\n        <Form.Group>\n          <Form.Input\n            required\n            label=\"Username\"\n            id='username'\n            name={username.name}\n            type={username.type}\n            value={username.value}\n            onChange={username.onChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            required\n            label=\"Password\"\n            id='password'\n            name={password.name}\n            type={password.type}\n            value={password.value}\n            onChange={password.onChange}\n          />\n        </Form.Group>\n        <Form.Button type='submit'>Login</Form.Button>\n      </Form>\n    </>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username: PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired\n}\n\nexport default LoginForm","import { postReq, responseOrThrow } from './fetch'\n\n// eslint-disable-next-line no-undef\nconst baseUrl = `${process.env.BACKEND_URL}/api/login`\n\nconst login = async credentials => {\n  const request = postReq(baseUrl, credentials)\n  const response = await fetch(request)\n  return await responseOrThrow(response)\n}\n\nexport default { login }","import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\n\nimport { setNotification } from 'Reducers/notificationReducer'\nimport { setToken, setUser } from 'Reducers/loginReducer'\n\nimport LoginForm from 'Forms/LoginForm'\n\nimport loginService from 'Services/login'\nimport { useField } from 'Hooks'\nimport { getFieldsValues } from 'Lib'\n\nfunction LoginPage(props) {\n  const username = useField('text', 'username')\n  const password = useField('password', 'password')\n  const { setToken, setUser, setNotification } = props\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(getFieldsValues(username, password))\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n      setToken(user.token)\n      setUser(user)\n\t\t\twindow.location.href = window.location.origin\n    } catch (exception) {\n      username.setValue('')\n      password.setValue('')\n      setNotification({ error: `Login failed: ${exception.message}` })\n    }\n  }\n\n  return (\n    <>\n      <main>\n        <div className=\"card\">\n          <LoginForm handleLogin={handleLogin} username={username} password={password}/>\n        </div>\n      </main>\n    </>\n  )\n}\n\nconst mapDispatchToProps =   {\n  setNotification,\n  setToken,\n  setUser,\n}\n\nLoginPage.propTypes = {\n  setToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(LoginPage)\n","import { useState } from 'react'\n\nexport const useField = (type, name) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    name,\n    type,\n    value,\n    onChange,\n    setValue,\n  }\n}","export const filterBlogs = (blogs, user) => {\n  return blogs.filter(blog => {\n    return blog.user.username === user.username\n  }\n  )\n}\n\nexport const getFieldsValues = (...fields) => {\n  const credentials = {}\n  fields.forEach(f => {\n    credentials[f.name] = f.value\n  })\n  return credentials\n}\n\nexport const checkUrl = (url) => {\n  if(url.substring(0,7) === 'http://' | url.substring(0,8) === 'https://'){\n    return true\n  }\n  return false\n}\n\nexport const populateWithBlogs = (users, blogs) => {\n  return users.map( u => {\n    let uBlogs = blogs.filter( b => b.user.id === u.id )\n    return { ...u, blogs: uBlogs }\n  })\n}\n\nexport const emptyObj = (obj) => Object.keys(obj).length === 0\n"],"sourceRoot":""}