{"version":3,"sources":["webpack://bloglist-frontend/./src/components/presentational/UserList.js","webpack://bloglist-frontend/./src/lib/index.js"],"names":["UserList","props","users","blogs","aria-live","striped","celled","populateWithBlogs","map","user","i","key","to","id","name","length","propTypes","PropTypes","connect","state","filterBlogs","filter","blog","username","getFieldsValues","credentials","fields","forEach","f","value","checkUrl","url","substring","u","uBlogs","b","emptyObj","obj","Object","keys"],"mappings":"kMAUMA,EAAW,SAACC,GAChB,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MAEf,OACA,gCACI,sBAAIC,YAAU,UAAd,SACH,4BACC,gBAAC,IAAD,CAAOC,SAAO,EAACC,QAAM,GACpB,gBAAC,WAAD,KACC,gBAAC,QAAD,KACC,gBAAC,eAAD,aACA,gBAAC,eAAD,wBAIF,gBAAC,SAAD,MACGC,QAAkBL,EAAOC,GAAOK,KAAI,SAACC,EAAMC,GAAP,OACrC,gBAAC,QAAD,CAAWC,IAAKD,GACf,gBAAC,SAAD,KACC,gBAAC,KAAD,CAAME,GAAE,iBAAYH,EAAKI,KAAOJ,EAAKK,OAEtC,gBAAC,SAAD,KAAaL,EAAKN,MAAMY,iBAiBhCf,EAASgB,UAAY,CACnBd,MAAOe,6BACPd,MAAOc,8BAGT,WAAeC,SAZS,SAACC,GACvB,MAAO,CACLjB,MAAOiB,EAAMjB,MACbC,MAAOgB,EAAMhB,SAWf,KAFF,CAGEH,I,svBCxDK,IAAMoB,EAAc,SAACjB,EAAOM,GACjC,OAAON,EAAMkB,QAAO,SAAAC,GAClB,OAAOA,EAAKb,KAAKc,WAAad,EAAKc,aAK1BC,EAAkB,WAAe,IAC5C,IAAMC,EAAc,GADwB,mBAAXC,EAAW,yBAAXA,EAAW,gBAK5C,OAHAA,EAAOC,SAAQ,SAAAC,GACbH,EAAYG,EAAEd,MAAQc,EAAEC,SAEnBJ,GAGIK,EAAW,SAACC,GACvB,SAA0B,YAAvBA,EAAIC,UAAU,EAAE,GAA0C,aAAvBD,EAAIC,UAAU,EAAE,KAM3CzB,EAAoB,SAACL,EAAOC,GACvC,OAAOD,EAAMM,KAAK,SAAAyB,GAChB,IAAIC,EAAS/B,EAAMkB,QAAQ,SAAAc,GAAC,OAAIA,EAAE1B,KAAKI,KAAOoB,EAAEpB,MAChD,cAAYoB,GAAZ,IAAe9B,MAAO+B,QAIbE,EAAW,SAACC,GAAD,OAAqC,IAA5BC,OAAOC,KAAKF,GAAKtB","file":"415.js","sourcesContent":["import React from \"react\"\n\nimport { PropTypes } from 'prop-types'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nimport {Â Table } from 'semantic-ui-react'\n\nimport { populateWithBlogs } from 'Lib'\n\nconst UserList = (props) => {\n  const { users, blogs } = props\n\n  return (\n\t\t<>\n      <h1 aria-live=\"polite\">Users</h1>\n\t\t\t<main>\n\t\t\t\t<Table striped celled >\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Blogs created</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{ populateWithBlogs(users, blogs).map((user, i) =>\n\t\t\t\t\t\t\t<Table.Row key={i}>\n\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t<Link to={`/users/${user.id}`}>{user.name}</Link>\n\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{user.blogs.length}</Table.Cell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n     </main>\n\t\t</>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users,\n    blogs: state.blogs\n  }\n}\n\nUserList.propTypes = {\n  users: PropTypes.array.isRequired,\n  blogs: PropTypes.array.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserList)","export const filterBlogs = (blogs, user) => {\n  return blogs.filter(blog => {\n    return blog.user.username === user.username\n  }\n  )\n}\n\nexport const getFieldsValues = (...fields) => {\n  const credentials = {}\n  fields.forEach(f => {\n    credentials[f.name] = f.value\n  })\n  return credentials\n}\n\nexport const checkUrl = (url) => {\n  if(url.substring(0,7) === 'http://' | url.substring(0,8) === 'https://'){\n    return true\n  }\n  return false\n}\n\nexport const populateWithBlogs = (users, blogs) => {\n  return users.map( u => {\n    let uBlogs = blogs.filter( b => b.user.id === u.id )\n    return { ...u, blogs: uBlogs }\n  })\n}\n\nexport const emptyObj = (obj) => Object.keys(obj).length === 0\n"],"sourceRoot":""}